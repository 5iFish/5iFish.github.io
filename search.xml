<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Python3.5学习（二）</title>
      <link href="/2018/07/12/Python3.5%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2018/07/12/Python3.5%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      <content type="html"><![CDATA[<h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><ul><li>列表</li><li>元组</li><li>字符串</li><li>字典</li><li>集合</li><li>文件操作</li><li>字符编码<a id="more"></a> <h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2></li></ul><hr><pre><code>names = &quot;ZhangYang Guyun Xiangpeng XuLiangChen&quot;#创建列表[]names = [&quot;ZhangYang&quot;,&quot;Guyun&quot;,&quot;XiangPeng&quot;,&quot;XuLiangchen&quot;]</code></pre><h3 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h3><p>增</p><pre><code>#追加到最后 list.appendnames.append(&quot;LeiHaidong&quot;)#插入到所选位置之前 list.insert(numb,str)names.insert(1,&quot;ChenRonghua&quot;)names.insert(3,&quot;XinZhiyu&quot;)</code></pre><p>删</p><pre><code>#delete1 list.remove(str)names.remove(&quot;ChenRonghua&quot;)#delete2 del list[numb]del names[1]#delete3 list.pop()names.pop() #删除最后一个</code></pre><p>改</p><pre><code>#修改 list[numb]=strnames[2]=&quot;XieDi&quot;print(names)</code></pre><p>查</p><pre><code>#查找 list.index(str)返回位置print(names.index(&quot;XieDi&quot;))</code></pre><h3 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h3><pre><code>names=[&apos;张三&apos;,&apos;Guyun&apos;,&apos;Xiangpeng&apos;,&apos;Alex&apos;]print(names[1:2])&apos;&apos;&apos;[a:b]取值为[a,b)左闭右开区间可以将:理解为省略的都取显示结果[&apos;Guyun&apos;]&apos;&apos;&apos;#取最后一个值print(names[-1])#取最后两个值print(names[-1:-3])#错误取法&apos;&apos;&apos;结果为[]应该是自左向右取值&apos;&apos;&apos;print(names[-3:-1])#错误取法&apos;&apos;&apos;结果为[&apos;Guyun&apos;, &apos;XiangPeng&apos;]取不到最后一位&apos;&apos;&apos;print(names[-2:])#正确取法#自前向后取3个print(names[:3])names2=[&apos;张三&apos;,&apos;Alex&apos;,&apos;Guna&apos;]#步长切片list[起:终:步长]print(names[0:-1:2])print(names[::2])</code></pre><h3 id="copy"><a href="#copy" class="headerlink" title="copy"></a>copy</h3><pre><code>import copynames = [&quot;ZhangYang&quot;,&quot;Guoyun &quot;,[&quot;jack&quot;,&quot;Anny&quot;]]names2 = names.copy()print(names)print(names2)#copy只复制一级列表，浅copy#names中的二级列表[&quot;jack&quot;,&quot;Anny&quot;]只复制了二级列表的id#当通过names[2][1]修改时，names2中的二级列表也会被修改names[1]=&quot;郭云&quot;names[2][1]=&quot;安妮&quot;print(names)print(names2)#copy.deepcopy:深copy#涉及到二级列表时创建新的列表id并创建二级列表#改变names的二级列表时，不改变names2的内容names3 = copy.deepcopy(names)names[2][1]=&quot;anny&quot;print(names)print(names3)for i in names:    print(i)</code></pre><h3 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h3><pre><code>#提取 list[list.index(str)]print(names[names.index(&quot;XieDi&quot;)])#统计重复的 list.count(str)print(names.count(&quot;XieDi&quot;))#清空 list.clear()names.clear()#反转 list.reverse()names.reverse()print(names)#按ascII码排序 list.sort()names.sort() #合并列表 list1.extend(list2),在末尾追加，不合并重复names.extend(names2)#del names2删除列表变量</code></pre><h2 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h2><hr><p>元组不希望被修改，且只有两种用法：</p><pre><code>names = (&apos;alex&apos;,&apos;jack&apos;)#index:查找,count:计数print(names.index(&apos;alex&apos;),names.count(&apos;jack&apos;))</code></pre><h2 id="购物车实例"><a href="#购物车实例" class="headerlink" title="购物车实例"></a>购物车实例</h2><hr><p>需求：</p><ol><li>启动程序后，让用户输入工资，然后打印商品列表</li><li>允许用户根据商品编号购买商品</li><li>用户选择商品后，检测余额是否够，够就直接扣款，不够就提醒</li><li>可随时退出，退出时，打印已购买的商品和余额</li></ol><p>自己写的代码如下：</p><pre><code># Author:ZT#创建商品列表goods = [[1,&quot;红米Note5&quot;,1099],         [2,&quot;华为荣耀畅玩7c&quot;,899],         [3,&quot;洁柔抽纸&quot;,43],         [4,&quot;小熊面包机&quot;,199],         [5,&quot;小米体脂称&quot;,179]]shoppingcart = [&quot;购物清单为：&quot;]#输入薪水balance = int(input(&quot;薪水：&quot;))#进入循环打印商品列表while balance&gt;0:    for i in goods:        print(i)    numbers =input(&quot;想买哪个?&quot;)    if (numbers!=&apos;q&apos;)and(1&lt;=int(numbers)&lt;=5):        if balance&gt;=goods[int(numbers)-1][2]:            shoppingcart.append(goods[int(numbers)-1])            balance=balance-goods[int(numbers)-1][2]            print(&quot;添加%s到购物车成功！余额为：%d&quot;%(goods[int(numbers)-1][1],balance))        else:            print(&quot;余额不足！！！&quot;)    else:        for i in shoppingcart:            print(i)        print(&quot;余额为：%d&quot;%balance)        break</code></pre><p>Alex代码为:</p><pre><code># Author:Alexproduct_list = [    (&apos;Iphone&apos;,5800),    (&apos;Mac Pro&apos;,9800),    (&apos;Bike&apos;,800),    (&apos;Watch&apos;,10600),    (&apos;Coffee&apos;,31),    (&apos;Python&apos;,120)]shopping_list = []salary = input(&quot;Input your salary:&quot;)#判断输入的数据类型if salary.isdigit():    salary = int(salary)    while True:        &apos;&apos;&apos;        for item in product_list:            print(product_list.index(item),item)        &apos;&apos;&apos;        #enumerate():将列表下标取出        for index,item in enumerate(product_list):            print(index,item)        user_choice = input(&quot;选择要买的商品&gt;&gt;&gt;:&quot;)        #判断输入的数据类型        if user_choice.isdigit():            user_choice: int = int(user_choice)            if user_choice &lt;len(product_list) and user_choice &gt;= 0:                p_item = product_list[user_choice]                if salary&gt;=p_item[1]:                    shopping_list.append(p_item)                    salary -=p_item[1]                    print(&quot;Added %s into shopping cart,your current balance is \033[31;1m%s\033[0m&quot;%(p_item[0],salary))                else:                    print(&quot;\033[41;1m余额只剩%s啦，还买个毛线\033[0m&quot; % salary)            else:                print(&quot;product code %s is not exist&quot;%user_choice)        elif user_choice == &apos;q&apos;:            print(&quot;------Shopping List------&quot;)            for index,p in enumerate(shopping_list):                print(index,p)            print(&quot;Your current balance:&quot;,salary)            exit()        else:            print(&quot;invalid option&quot;)else:    print(&quot;error:please input digit!!&quot;)</code></pre>]]></content>
      
      <categories>
          
          <category> Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3.5学习 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>好久没更新啦!</title>
      <link href="/2018/07/12/%E5%A5%BD%E4%B9%85%E6%B2%A1%E6%9B%B4%E6%96%B0%E5%95%A6/"/>
      <url>/2018/07/12/%E5%A5%BD%E4%B9%85%E6%B2%A1%E6%9B%B4%E6%96%B0%E5%95%A6/</url>
      <content type="html"><![CDATA[<p>之前一直在备战软考和六级考试</p><p>导致一直没有学习python</p><p>这几天得努力啦</p>]]></content>
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python3.5学习（一）</title>
      <link href="/2018/04/19/Python3.5%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2018/04/19/Python3.5%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      <content type="html"><![CDATA[<h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><h2 id="简单的输入输出"><a href="#简单的输入输出" class="headerlink" title="简单的输入输出"></a>简单的输入输出</h2><pre><code>username = input(&quot;username&quot;)print(username)</code></pre><h2 id="整行打印"><a href="#整行打印" class="headerlink" title="整行打印"></a>整行打印</h2><p>三种方式:</p><a id="more"></a> <pre><code>info1 = &apos;&apos;&apos;----------- info of&apos;&apos;&apos;+ name +&apos;&apos;&apos; ------------Name:&apos;&apos;&apos; + name +&apos;&apos;&apos;Age:&apos;&apos;&apos; + age+&apos;&apos;&apos;Job:&apos;&apos;&apos; + job +&apos;&apos;&apos;Salary:&apos;&apos;&apos; + salary +&apos;&apos;&apos;----------------------------------------------&apos;&apos;&apos;print(info1)</code></pre><p>or</p><pre><code>info2 = &apos;&apos;&apos;------------- info of %s ----------Name:%sAge:%dJob:%sSalary:%s&apos;&apos;&apos; %(name,name,age,job,salary)print(info2)</code></pre><p>or</p><pre><code>info3 = &apos;&apos;&apos;------------ info of {_name}---------Name:{_name}Age:{_age}Job:{_job}Salary:{_salary}&apos;&apos;&apos;.format(    _name=name,    _age=age,    _job=job,    _salary=salary)print(info3)</code></pre><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><pre><code>name = &quot;zt&quot;name2 = nameprint (&quot;My name is &quot;,name,name2)name  = &quot;PaoChe Ge&quot;gf_of_oldboy = &quot;007&quot;#大写代表常量PIE = 200city = &quot;中国&quot;print(name,name2)print(city)</code></pre><p>输出结果为：</p><pre><code>My name is  zt ztPaoChe Ge zt中国</code></pre><p>可以看出Python的变量赋值和C语言的指针很像，我们将一变量等于(=)另一变量时，是将右侧变量的指向地址赋给左侧变量，而不是将右侧变量的值传递过去。</p><h2 id="getpass模块"><a href="#getpass模块" class="headerlink" title="getpass模块"></a>getpass模块</h2><pre><code>import getpasspassword = getpass.getpass(&quot;password:&quot;)</code></pre><p>无回现输入密码</p><h2 id="if判断语句"><a href="#if判断语句" class="headerlink" title="if判断语句"></a>if判断语句</h2><pre><code>import getpass_username = &quot;ZT&quot;_password = &quot;123123&quot;username = input(&quot;username:&quot;)password = getpass.getpass(&quot;password:&quot;)if _username == username and _password == password:    print(&quot;Welcome user {name}&quot;.format(name = username))else:    print(&quot;Invalid username or password&quot;)print(username,password)</code></pre><p>使用时注意if语句后的”:”容易漏掉</p><h2 id="for循环语句"><a href="#for循环语句" class="headerlink" title="for循环语句"></a>for循环语句</h2><pre><code>for i in range(0,10,3):    print(&quot;loop &quot;,i)</code></pre><p>i=0，判断是否小于10，之后进入循环输出0，循环后i=i+3，<br>i=3，判断是否小于10，之后进入循环输出3，循环后i=i+3，<br>i=6，判断是否小于10，之后进入循环输出6，循环后i=i+3，<br>i=9，判断是否小于10，之后进入循环输出9，循环后i=i+3，<br>i=12，判断是否小于10，循环终止。<br>※先判断，再循环，后自增。</p><h2 id="while循环语句"><a href="#while循环语句" class="headerlink" title="while循环语句"></a>while循环语句</h2><pre><code>i = 0while i&lt;3:    print(i)    i = i + 1</code></pre><h3 id="跳出循环"><a href="#跳出循环" class="headerlink" title="跳出循环"></a>跳出循环</h3><p>continue 跳出本次循环进行下次循环<br>break 退出本循环体</p><h3 id="实例：猜数字"><a href="#实例：猜数字" class="headerlink" title="实例：猜数字"></a>实例：猜数字</h3><pre><code>_myage = 26count = 0while count &lt;3:    myage = int(input(&quot;猜猜我年龄\n&quot;))    if myage == _myage:        print(&quot;恭喜你，猜对了！&quot;)        break    elif myage &gt;_myage:        print(&quot;往小了猜&quot;)    else:        print(&quot;往大了猜&quot;)    count = count +1    if count == 3:        countine_confirm = input(&quot;do you want to keep game?&quot;)        if countine_confirm !=&quot;n&quot;:            count = 0</code></pre><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><h2 id="登录接口"><a href="#登录接口" class="headerlink" title="登录接口"></a>登录接口</h2><ul><li>输入用户名密码</li><li>认证成功后显示欢迎信息</li><li>输错三次后锁定账户</li></ul><p>难点:</p><ul><li>涉及到Python对文件的操作增删改查</li><li>判断和循环语句的嵌套使用</li></ul><h3 id="Python3-5对文件的操作"><a href="#Python3-5对文件的操作" class="headerlink" title="Python3.5对文件的操作"></a>Python3.5对文件的操作</h3><pre><code>open(‘test.txt’,’mode’,encoding=’xxx’)</code></pre><p>第一个参数是文件的路径名；第三个参数的xxx那里是填入适当的编码格式，假如你的文件是gbk格式的，你打开的时候，为了防止出现乱码，你就得告诉函数，需要用什么格式打开。</p><table><thead><tr><th style="text-align:left">mode</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">r</td><td style="text-align:left">以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</td></tr><tr><td style="text-align:left">rb</td><td style="text-align:left">以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。</td></tr><tr><td style="text-align:left">r+</td><td style="text-align:left">打开一个文件用于读写。文件指针将会放在文件的开头。</td></tr><tr><td style="text-align:left">rb+</td><td style="text-align:left">以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。</td></tr><tr><td style="text-align:left">w</td><td style="text-align:left">打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td></tr><tr><td style="text-align:left">wb</td><td style="text-align:left">以二进制格式打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td></tr><tr><td style="text-align:left">w+</td><td style="text-align:left">打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td></tr><tr><td style="text-align:left">wb+</td><td style="text-align:left">以二进制格式打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td></tr><tr><td style="text-align:left">a</td><td style="text-align:left">打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。</td></tr><tr><td style="text-align:left">ab</td><td style="text-align:left">以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。</td></tr><tr><td style="text-align:left">a+</td><td style="text-align:left">打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。</td></tr><tr><td style="text-align:left">ab+</td><td style="text-align:left">以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。</td></tr></tbody></table><h4 id="读操作"><a href="#读操作" class="headerlink" title="读操作"></a>读操作</h4><pre><code>f = open(&apos;fileTest.txt&apos;, &apos;r&apos;)f = f.read()print(f)</code></pre><p>read()一次性读取文件的全部内容，可以在read(size)里面传参，表示每次读取size个字节的内容。<br>readline() 每次读取文件一行的内容。<br>readlines()一次读取所有内容并按行返回 list。</p><h4 id="写操作"><a href="#写操作" class="headerlink" title="写操作"></a>写操作</h4><p>只有调用close()方法时，操作系统才能保证把没有写入的数据全部写入磁盘：</p><pre><code>f = open(&apos;fileTest2.txt&apos;,&apos;w&apos;)f.write(&apos;hello! It`s me!&apos;)f.close()</code></pre><p>对于要写入特定编码的文本文件，可以给open() 的encoding传参：</p><pre><code>f = open(&apos;fileTest2.txt&apos;,&apos;w&apos;,encoding=&apos;gbk&apos;)f.write(&apos;hello! It`s me!&apos;)f.close()</code></pre><p>write()是文件写操作中一个比较简单的操作，它将字符串写入文件，没有返回值。除了这个write()还有writelines()函数，这个函数是向文件写入一个序列字符串列表，换行需要字节添加换行符：</p><pre><code>str = [&apos;你好,&apos;,&apos;欢迎！\n&apos;,&apos;这里是XXX的博客.&apos;]f = open(&apos;fileTest2.txt&apos;,&apos;w&apos;,encoding=&apos;utf-8&apos;)f.writelines(str)f.close()&apos;&apos;&apos;这是运行结果：你好,欢迎！这里是XXX的博客.&apos;&apos;&apos;</code></pre><h4 id="文件其他操作"><a href="#文件其他操作" class="headerlink" title="文件其他操作"></a>文件其他操作</h4><p>seek():指定文件指针的位置，seek(0)把指针移动到文件开头处；<br>tell():获取文件指针的位置；</p><h4 id="关闭文件操作"><a href="#关闭文件操作" class="headerlink" title="关闭文件操作"></a>关闭文件操作</h4><p>我们结束文件操作后，需要调用close()为关闭文件操作符，以免占有内存资源。当然，python为我们提供了更便捷的语句，帮助我们关闭，那就with。上面的代码，修改成下面这个也是行得通的，而且也不用在写close()函数：</p><pre><code>with open(&apos;fileTest.txt&apos;,&apos;r&apos;,encoding=&apos;utf-8&apos;) as f:    for i in f.readlines():        if &apos;XXX&apos; in i:            i = i.replace(&apos;XXX&apos;,&apos;SSS&apos;)        print(i.strip())</code></pre><p>※注意：当使用readline时读取的为整行字符串加上末尾的换行符，要想去掉换行符在赋值的时候需要进行操作：</p><pre><code>i = &quot;hello&quot;j = i[1:]q = i[:-1]print(j+&apos;\n&apos;+q)&quot;&quot;&quot;结果为：ellohell&quot;&quot;&quot;</code></pre><p>要使用[:-1]去掉末尾的换行符。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre><code># Author:ZTimport getpassregiste = input(&quot;是否拥有账户？(y/n)\n&quot;)if(registe == &quot;n&quot;):    _username = input(&quot;请输入用户名：\n&quot;)    _password = getpass.getpass(&quot;请输入密码：\n&quot;)    _passwordc = getpass.getpass(&quot;请确认密码：\n&quot;)    while _password != _passwordc:        print(&quot;请重新输入用户名和密码&quot;)        _username = input(&quot;请输入用户名：\n&quot;)        _password = getpass.getpass(&quot;请输入密码：\n&quot;)        _passwordc = getpass.getpass(&quot;请确认密码：\n&quot;)    myfile = open(&quot;myaccount.txt&quot;,&apos;w&apos;)    myfile.write(&quot;y\n&quot;)    myfile.write(&quot;{username}\n&quot;.format(username=_username))    myfile.write(&quot;{password}\n&quot;.format(password=_password))    myfile.close()    print(&quot;恭喜你！创建成功！&quot;)elif (registe == &quot;y&quot;):    myaccount = open(&quot;myaccount.txt&quot;,&apos;r+&apos;)    state = myaccount.readline()[:-1]    _usernamer = myaccount.readline()[:-1]    _passwordr = myaccount.readline()[:-1]    if(state == &apos;n&apos;):        print(&quot;SORRY,YOUR ACCOUNT HAS BEEN LOCK,YOU CAN&apos;T LOGIN\nPLEASE CONNECTION WITH SOMEONE!!&quot;)    else:        for i in range(2,-1,-1):            username = input(&quot;请输入用户名：\n&quot;)            password = getpass.getpass(&quot;请输入密码：\n&quot;)            if (username == _usernamer and password == _passwordr):                print(&quot;Welcome user {name}&quot;.format(name=username))                break            else:                if (i == 0):                    myaccount.seek(0)                    myaccount.write(&quot;n\n&quot;)                    print(&quot;账户已被锁定！！！&quot;)                else:                    print(&quot;用户名或密码错误，今日还可输入{n}次&quot;.format(n=i))    myaccount.close()else:    print(&quot;输入无效!!!&quot;)</code></pre><h3 id="功能及不足"><a href="#功能及不足" class="headerlink" title="功能及不足"></a>功能及不足</h3><p>此接口主要实现的功能如下：</p><ul><li>实现了用户的注册和登录，并保持到硬盘</li><li>实现了无回现输入密码，并进行密码确认</li><li>实现了账户的锁定功能</li></ul><p>主要存在的问题如下：</p><ul><li>输入密码的部分代码存在明显的冗余</li><li>从文件取出信息的方式过于繁琐</li><li>锁定账户后可以通过重新注册解锁</li><li>整个程序的流程图不够完善</li><li>无法进行多用户账户管理</li></ul>]]></content>
      
      <categories>
          
          <category> Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3.5学习 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World!</title>
      <link href="/2018/04/03/Hello-World-0/"/>
      <url>/2018/04/03/Hello-World-0/</url>
      <content type="html"><![CDATA[<p>真棒，终于弄好啦媳妇儿。</p><p>爱你，媳妇儿</p>]]></content>
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
